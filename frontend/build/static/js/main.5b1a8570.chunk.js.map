{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstant.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_RESET","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_RESET","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productReviewCreate","productCreate","productUpdate","cart","cartItems","shippingAddress","item","exitItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","stars","i","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","HomeScreen","search","useEffect","href","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","Image","alt","fluid","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","FormLabel","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","console","log","Table","striped","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","pushState","Check","label","checked","PlaceOrderScreen","itemsPrice","total","shippingPrice","taxRate","taxPrice","Country","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","stripped","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","ProductEditScreen","setPrice","setImage","brand","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5b1a8570.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST' \r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS' \r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL' \r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST' \r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS' \r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL' \r\n\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST' \r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS' \r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL' \r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\n\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {    productReviewCreateReducer, \r\n            productDeleteReducer,\r\n            productDetailsReducer,\r\n            productListReducer,\r\n            productCreateReducer,\r\n            productUpdateReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport {    orderCreateReducer, \r\n            orderDetailsReducer, \r\n            orderListMyReducer,\r\n            orderPayReducer,\r\n            orderDeliverReducer,\r\n            orderListReducer } from './reducers/orderReducers';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    productDetails : productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate : productUpdateReducer,\r\n\r\n    cart : cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList : orderListReducer,\r\n    orderDeliver : orderDeliverReducer,\r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n            cartItems : cartItemsFromStorage ,\r\n            shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin : {userInfo : userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n     composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\n\r\nexport default store","import { PRODUCT_LIST_REQUEST , \r\n    PRODUCT_LIST_SUCCESS ,\r\n     PRODUCT_LIST_FAIL ,\r\n\r\n     PRODUCT_DETAILS_REQUEST , \r\n    PRODUCT_DETAILS_SUCCESS ,\r\n     PRODUCT_DETAILS_FAIL ,\r\n\r\n     PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = {products:[]}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading:true, products : []}\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading: false, products: action.payload.products, \r\n                page: action.payload.page, \r\n                pages:action.payload.pages}\r\n        \r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = {product:{reviews:[]}}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true, ...state}\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false, product: action.payload}\r\n        \r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading:true}\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        \r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM ,\r\n        CART_SAVE_SHIPPING_ADDRESS,\r\n        CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state={cartItems:[] , shippingAddress: {}}, action)=> {\r\n    switch(action.type){\r\n\r\n        case CART_ADD_ITEM :\r\n            const item = action.payload\r\n            const exitItem = state.cartItems.find(x=> x.product === item.product)\r\n\r\n            if(exitItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x=>\r\n                        x.product === exitItem.product ? item : x\r\n                        )\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return{\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport { USER_LOGIN_FAIL, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGOUT ,\r\n    USER_REGISTER_FAIL, \r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, \r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n\r\n} from '../constants/userConstants';\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        \r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        \r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        \r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        \r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {user: {}}, action) =>{\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading:true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload}\r\n        \r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        \r\n        case USER_DETAILS_RESET:\r\n            return {user:{}}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success: true, user: action.payload}\r\n        \r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        \r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userListReducer = (state = {users:[]}, action) =>{\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload}\r\n        \r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        \r\n        case USER_LIST_RESET:\r\n            return {user: []}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        \r\n        case USER_DELETE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        \r\n       \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) =>{\r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading:true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading: false, success: true}\r\n        \r\n        case USER_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        \r\n        case USER_UPDATE_RESET:\r\n            return {user : {} }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {\r\nORDER_CREATE_REQUEST, \r\nORDER_CREATE_SUCCESS, \r\nORDER_CREATE_FAIL,\r\nORDER_CREATE_RESET,\r\nORDER_DETAILS_REQUEST,\r\nORDER_DETAILS_FAIL,\r\nORDER_DETAILS_SUCCESS,\r\nORDER_PAY_SUCCESS,\r\nORDER_PAY_FAIL,\r\nORDER_PAY_REQUEST,\r\nORDER_PAY_RESET,\r\n\r\nORDER_LIST_MY_SUCCESS,\r\nORDER_LIST_MY_FAIL,\r\nORDER_LIST_MY_REQUEST,\r\nORDER_LIST_MY_RESET,\r\n\r\nORDER_LIST_REQUEST,\r\nORDER_LIST_SUCCESS,\r\nORDER_LIST_FAIL,\r\n\r\nORDER_DELIVER_REQUEST,\r\nORDER_DELIVER_SUCCESS,\r\nORDER_DELIVER_FAIL,\r\nORDER_DELIVER_RESET,\r\n} from '../constants/orderConstant';\r\n\r\nexport const orderCreateReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success : true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_CREATE_RESET:\r\n            return {  }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state={loading: true, orderItems:[], shippingAddress: {} }, action) => {\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state={ }, action) => {\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state={orders: [] }, action) => {\r\n    \r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport axios from 'axios';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstant';\r\nimport { USER_LOGIN_FAIL, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGOUT ,\r\n\r\n    USER_REGISTER_FAIL, \r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS,\r\n\r\n    USER_DETAILS_FAIL, \r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants';\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n            \r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/login/',\r\n            {'username': email, 'password': password},\r\n            config)\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n    dispatch({type:USER_DETAILS_RESET})\r\n    dispatch({type:ORDER_LIST_MY_RESET})\r\n    dispatch({type:USER_LIST_RESET})\r\n}\r\n\r\n\r\n//Register\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n            \r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/register/',\r\n            {'name': name, 'email': email, 'password': password},\r\n            config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//update\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n            \r\n        })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n   \r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/users/profile/update/`, user, config\r\n        )\r\n        \r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n       \r\n    }catch(error){\r\n        dispatch({type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n            \r\n        })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n   \r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/`, config\r\n        )\r\n        \r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       \r\n    }catch(error){\r\n        dispatch({type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n   \r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/users/delete/${id}/`, config\r\n        )\r\n        \r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       \r\n    }catch(error){\r\n        dispatch({type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n   \r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n\r\n        const {data} = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n             config\r\n        )\r\n        \r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        \r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n       \r\n    }catch(error){\r\n        dispatch({type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n        })\r\n    }\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\r\nimport { useDispatch, useSelector,  } from 'react-redux';\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions';\r\nimport SearchBox from './SearchBox'\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n    const {userInfo} = userLogin\r\n\r\n     const dispatch = useDispatch()\r\n\r\n    const logoutHandler = ()=> {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n    \r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                    <Navbar.Brand >Shoaib-Commerce</Navbar.Brand>\r\n                    </LinkContainer>\r\n                   \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                 <Nav.Link > <i className= 'fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {\r\n                                userInfo ? (\r\n                                        <NavDropdown title={userInfo.name} id='username'>\r\n                                            <LinkContainer to='/profile'>\r\n                                                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                            </LinkContainer>\r\n\r\n                                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className= 'fas fa-user'></i> Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )\r\n                            }\r\n\r\n                           { userInfo && userInfo.isAdmin &&  (\r\n                           <NavDropdown title='Admin' id='adminMenu'>\r\n                                \r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                            </NavDropdown>\r\n                            )\r\n                            \r\n\r\n                            }\r\n                        \r\n                        </Nav>\r\n                        \r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col  } from 'react-bootstrap'\r\nfunction Footer() {\r\n    return (\r\n        \r\n            <footer>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className='text-center py-3'>Copyright &copy; E-commerce Shop</Col>\r\n                    </Row>\r\n                </Container>\r\n            </footer>\r\n    \r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    const stars = []\r\n    for ( let i = 1 ; i<6 ; i++){\r\n        stars.push(\r\n            <i style={{color}} className={\r\n                value >= i\r\n                ? 'fas fa-star'\r\n                : value >= ( i - .5)\r\n                ? 'fas fa-star-half-alt'\r\n                :   'far fa-star'\r\n            }>\r\n\r\n            </i>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                {\r\n                  stars\r\n                   \r\n                }\r\n            </span>\r\n            <span>\r\n                {text && text}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({product}) {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n           <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image}/>\r\n           </Link>\r\n           <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                        <Card.Title as='div'>\r\n                          <strong>{product.name}</strong>\r\n                        </Card.Title>\r\n                </Link>\r\n                <Card.Text as='div'>\r\n                    <div className='my-3'>\r\n                            {product.rating} from {product.numReviews}\r\n                            <Rating value = {product.rating} text ={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n\r\n           </Card.Body>\r\n           </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role = 'status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'> Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","\r\nimport axios from 'axios'\r\nimport { PRODUCT_LIST_REQUEST , \r\n    PRODUCT_LIST_SUCCESS ,\r\n     PRODUCT_LIST_FAIL,\r\n    \r\n     PRODUCT_DETAILS_REQUEST , \r\n     PRODUCT_DETAILS_SUCCESS ,\r\n      PRODUCT_DETAILS_FAIL ,\r\n\r\n      PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    } from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword='') => async (dispatch) => {\r\n   try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n   }catch(error){\r\n    dispatch({type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n    })\r\n   }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n         dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n \r\n         const {data} = await axios.get(`/api/products/${id}`)\r\n \r\n         dispatch({\r\n             type: PRODUCT_DETAILS_SUCCESS,\r\n             payload: data\r\n         })\r\n \r\n    }catch(error){\r\n     dispatch({type: PRODUCT_DETAILS_FAIL,\r\n             payload: error.response && error.response.data.detail \r\n                     ? error.response.data.detail\r\n                     : error.message\r\n     })\r\n    }\r\n }\r\n\r\n export const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        console.log(id)\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React , {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\n\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { listProducts } from '../actions/productActions'\r\nimport { productListReducer } from '../reducers/productReducers';\r\nfunction HomeScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <h2> This is a Demo Website. <a style={{\"color\": \"blue\", 'text-decoration': 'underline'}} href='https://md-shoaib.me' target=\"_blank\" >Contact The Developer</a> </h2>\r\n            {\r\n                loading ? <Loader/>\r\n                : error ? <Message variant='danger' > {error}</Message>\r\n                    : \r\n                    <div>\r\n                    <Row>\r\n                {\r\n                        products.map(product=> (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={4}>\r\n                                <Product product={product}/>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({match, history}) {\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])  \r\n    const addToCartHandler = () =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    \r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM ,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock : data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload:id\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload:data\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, From, Button, Card, Form } from 'react-bootstrap'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport Message from '../components/Message'\r\n\r\n\r\nfunction CartScreen({match, location, history }) {\r\n\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1 \r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state=> state.cart)\r\n    const {cartItems} = cart\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n        \r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id)=>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkOutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8} sm={12} xs={12}>\r\n                <h1>Shopping Cart</h1>\r\n                { cartItems.length ===0 ? (\r\n                    <Message variant='info'>\r\n                        Your card is empty. <Link to='/'>Go Back</Link> \r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item=>(\r\n                             \r\n                             <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2} sm={3} xs={4}>\r\n                                       <Image src={item.image} alt={item.name} fluid rounded />    \r\n                                    </Col>\r\n                                    <Col md={3} sm={6} xs={4}>\r\n                                        <Link to={`/product/${item.product}`} >{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2} sm={3} xs={3}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={3} sm={2} xs={4}>\r\n                                    <Form.Control\r\n                                                as='select'\r\n                                                value={item.qty}\r\n                                                onChange={(e) =>dispatch(addToCart(item.product, Number(e.target.value))) }\r\n                                                >\r\n                                                    {\r\n                                                       [...Array(item.countInStock).keys()].map((x)=>(\r\n                                                           <option key={x+1} value={x+1}>\r\n                                                               {x+1}\r\n                                                           </option>\r\n                                                       )) \r\n                                                    }\r\n                                                </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1} sm={3} xs={3}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick= {()=>removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash' />\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                             </ListGroup.Item>\r\n                        ))\r\n\r\n                        }\r\n\r\n                    </ListGroup>\r\n                )\r\n                }\r\n\r\n            </Col>\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flash'>\r\n                            <ListGroup.Item>\r\n                                <h2> Subtotal({cartItems.reduce((acc, item)=> acc + item.qty, 0)}) items </h2>\r\n                                ${cartItems.reduce((acc, item)=> acc + item.qty*item.price, 0).toFixed(2)}\r\n                                \r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems.length ===0}\r\n                                    onClick={checkOutHandler}\r\n                                >\r\n                                    Proceed to Checkout\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, FormControl, FormLabel } from 'react-bootstrap'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { login } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\n\r\nfunction LoginScreen({location, history}) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('')\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, redirect, userInfo])\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <FormLabel>Email Address:</FormLabel>\r\n                    <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <FormLabel>Password:</FormLabel>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : 'register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, FormControl, FormLabel } from 'react-bootstrap'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { register } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\n\r\nfunction RegisterScreen({location, history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, redirect, userInfo])\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n\r\n        if(password != confirmPassword ){\r\n            setMessage('Passwords do not match')\r\n        } else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <FormLabel>Name:</FormLabel>\r\n                    <Form.Control\r\n                    required\r\n                    type='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={(e)=>setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <FormLabel>Email Address:</FormLabel>\r\n                    <Form.Control\r\n                    required\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <FormLabel>Password:</FormLabel>\r\n                    <Form.Control\r\n                    required\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <FormLabel> Confirm Password:</FormLabel>\r\n                    <Form.Control\r\n                    required\r\n                    type='password'\r\n                    placeholder='Confirm Password'\r\n                    value={confirmPassword}\r\n                    onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account? <Link to={redirect ? `/login?redirect=${redirect}` : 'login'}>Sign In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport { Form, Button, Row, Col, Table, FormLabel } from 'react-bootstrap'; \r\nimport Message from '../components/Message';\r\nimport { getUserDetails , updateUserProfile} from '../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nfunction ProfileScreen({history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n    \r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {loading: loadingOrders, error:errorOrders, orders} = orderListMy\r\n\r\n    const {error, loading, user} = userDetails\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        } else {\r\n            if(!user || !user.name || success || userInfo._id != user._id){\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n                \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n    \r\n\r\n    \r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        if(password != confirmPassword ){\r\n            setMessage('Passwords do not match')\r\n        } else{\r\n         \r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name' : name,\r\n                'email': email,\r\n                'password': password\r\n        }))\r\n        setMessage('') \r\n        }\r\n        \r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader/>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <FormLabel>Name:</FormLabel>\r\n                        <Form.Control\r\n                        \r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e)=>setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <FormLabel>Email Address:</FormLabel>\r\n                        <Form.Control\r\n                        \r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e)=>{setEmail(e.target.value)\r\n                        console.log(email)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <FormLabel>Password:</FormLabel>\r\n                        <Form.Control\r\n                        \r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <FormLabel> Confirm Password:</FormLabel>\r\n                        <Form.Control\r\n                        \r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (<Loader/>) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                    ) : (\r\n                        <Table striped responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delivered</th>\r\n                                    <th>Details</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0,10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? order.paidAt.substring(0,10) :(\r\n                                            <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                        )}</td>\r\n                                        <td>{order.isDelivered ? order.deliveredAt.substring(0,10) :(\r\n                                            <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                        )}</td>\r\n                                        \r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm'>View Order</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    \r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios';\r\nimport {\r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n    } from '../constants/orderConstant';\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n            \r\n        })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n    \r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/orders/add/`, order, config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })   \r\n        \r\n        localStorage.removeItem('cartItems')\r\n\r\n    }catch(error){\r\n        dispatch({type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n            \r\n        })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n    \r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/${id}/`, config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n            \r\n        })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n    \r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/orders/${id}/pay/`,paymentResult,  config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST \r\n        })\r\n\r\n        const {\r\n            userLogin : {userInfo},\r\n        } = getState()\r\n    \r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/myorders/`, config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n                    ? error.response.data.detail\r\n                    : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className='justify-content-center mb-b'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4   ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, FormLabel } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nfunction ShippingScreen({history}) {\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        \r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n               <Form.Group controlId='address'>\r\n                    <FormLabel>Address:</FormLabel>\r\n                    <Form.Control\r\n                    required\r\n                    type='text'\r\n                    placeholder='Enter Address'\r\n                    value={address ? address : ''}\r\n                    onChange={(e)=>setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <FormLabel>City:</FormLabel>\r\n                    <Form.Control\r\n                    required\r\n                    type='text'\r\n                    placeholder='Enter City'\r\n                    value={city ? city : ''}\r\n                    onChange={(e)=>setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <FormLabel>Postal Code:</FormLabel>\r\n                    <Form.Control\r\n                    required\r\n                    type='text'\r\n                    placeholder='Enter PostalCode'\r\n                    value={postalCode ? postalCode : ''}\r\n                    onChange={(e)=>setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <FormLabel>Country:</FormLabel>\r\n                    <Form.Control\r\n                    required\r\n                    type='text'\r\n                    placeholder='Enter Country'\r\n                    value={country ? country : ''}\r\n                    onChange={(e)=>setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","\r\nimport React, { useState } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nfunction PaymentScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)   \r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    if(!shippingAddress.address){\r\n        history.pushState('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        console.log(e.target.value, paymentMethod)\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check \r\n                                type='radio'\r\n                                label='PayPal or Credit Card'\r\n                                id='paypal' //may change this in future\r\n                                name='paymentmethod'\r\n                                checked\r\n                                onChange={(e)=>setPaymentMethod(e.target.value)}\r\n                            >\r\n                            </Form.Check>\r\n\r\n                            \r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","\r\nimport React, { useState } from 'react'\r\nimport { Button, Col, Form, FormLabel, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport Message from '../components/FormContainer'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { Link } from 'react-router-dom';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport { useEffect } from 'react';\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstant';\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, error, success} = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((total, item)=>  total + item.price * item.qty, 0).toFixed(2)\r\n\r\n    //delivery cost\r\n    cart.shippingPrice = cart.shippingAddress.city === 'Dhaka' || 'dhaka' || 'dhk' ? 60.00 : 100.00\r\n    //tax\r\n    cart.taxRate = Number(0.05)\r\n    cart.taxPrice = (cart.taxRate * cart.itemsPrice).toFixed(2)\r\n    //total\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n        dispatch({type: ORDER_CREATE_RESET})\r\n    }\r\n\r\n    const t = cart.totalPrice\r\n\r\n    useEffect(() => {\r\n        \r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n        } \r\n            \r\n    }, [success, history]);\r\n\r\n    const placeOrderHandler = ()=>{ \r\n\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice : cart.itemsPrice,\r\n            shippingPrice : cart.shippingPrice,\r\n            taxPrice : cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n\r\n    }))\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong> Address:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {' '}\r\n                                {cart.shippingAddress.postalCode}\r\n                                {' '}\r\n                                {cart.shippingAddress.Country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong> Method:</strong>\r\n                                {cart.paymentMethod}\r\n                               \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty.\r\n                            </Message> : ( \r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index)=>(\r\n                                        <ListGroup.Item className={`productNo-${index}`}>\r\n                                            <Row>\r\n                                                <Col  md={1} >\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            ) }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col md={6} xs={6}> Items: </Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                           \r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            \r\n                            <Row>\r\n                                <Col md={6} xs={6}> Shipping: </Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            \r\n                            <Row>\r\n                                <Col md={6} xs={6}> Tax: </Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            \r\n                            <Row>\r\n                                <Col md={6} xs={6}> Total: </Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            \r\n                            <Button \r\n                            type='button'\r\n                            className='btn-block'\r\n                            variant='primary'\r\n                            disabled={cart.cartItems.length === 0}\r\n                            onClick={placeOrderHandler}\r\n                            >\r\n                                Place Order\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","\r\nimport React from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\r\nimport { useEffect, useState } from 'react';\r\nimport Loader from '../components/Loader';\r\nimport { Link } from 'react-router-dom';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport {  ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstant';\r\n\r\nfunction OrderScreen({match, history}) {\r\n\r\n    \r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order, error, loading} = orderDetails\r\n\r\n    const  [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading: loadingPay, success: successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((total, item)=>  total + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n    \r\n\r\n    const client_id = 'AfdhsyUjdaN5ADhBcAPVIInYTHm8BbolqlOaaeS8vv2qLZlquNnMXCL2iz5c8rQqU1HQNyu-MIs055k_'\r\n    \r\n    const addPayPalScript = () =>{\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = `https://www.paypal.com/sdk/js?client-id=${client_id}`\r\n        script.async = true\r\n        script.onload = () =>{\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen","\r\nimport React, {useEffect, useState} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button} from 'react-bootstrap'; \r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listUsers , deleteUser } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nfunction UserListScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {  success : successDelete} =userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, successDelete, userInfo]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n            ? <Loader/>\r\n            : error \r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                \r\n                    <Table stripped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th>Admin</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead> \r\n                        <tbody>\r\n                             {users.map(user => (\r\n                                 <tr key= {user._id}>\r\n                                     <td>{user._id}</td>\r\n                                     <td>{user.name}</td>\r\n                                     <td>{user.email}</td>\r\n                                     <td>{user.isAdmin ? (\r\n                                         <i className='fas fa-check' style={{color:'green'}}></i>\r\n                                     ): (\r\n                                        <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                     )}</td>\r\n                                     \r\n                                     <td>\r\n                                         <LinkContainer to={`/admin/user/${user._id}/edit`} >\r\n                                             <Button variant='dark' className='btn-sm'>\r\n                                             <i className='fas fa-edit' ></i> \r\n                                             </Button>\r\n                                         </LinkContainer>\r\n                                         <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(user._id) }>\r\n                                             <i className='fas fa-trash' ></i> \r\n                                            </Button>\r\n                                     </td>\r\n                                 </tr>\r\n                             ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                \r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button,  FormLabel } from 'react-bootstrap'; \r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { USER_UPDATE_REQUEST, USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\n\r\nfunction UserEditScreen({match, history}) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error:errorUpdate, loading:loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if(!user || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(`${userId}`))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n        \r\n    }, [user, userId, successUpdate, history])\r\n    \r\n\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id: user._id,name, email, isAdmin}))\r\n\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                    Go Back\r\n            </Link>\r\n        \r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader/> }\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }\r\n\r\n\r\n                {loading? <Loader/> : error ? <Message  variant='danger'>{error}</Message>\r\n                : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <FormLabel>Name:</FormLabel>\r\n                        <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e)=>setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <FormLabel>Email Address:</FormLabel>\r\n                        <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='isAdmin'>\r\n                        <FormLabel>Password:</FormLabel>\r\n                        <Form.Check\r\n\r\n                        type='checkbox'\r\n                        label='Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e)=>setIsAdmin(e.target.checked)}\r\n                        >\r\n                        </Form.Check>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n                    \r\n                )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","\r\nimport React, {useEffect, useState} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col} from 'react-bootstrap'; \r\nimport {  useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\n\r\nimport { deleteProduct, listProducts,\r\ncreateProduct, updateProduct\r\n} from '../actions/productActions';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nfunction ProductListScreen({history, match}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, page, pages} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading: loadingDelete, error:errorDelete, success:successDelete} = productDelete\r\n    \r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading: loadingCreate, error:errorCreate, success:successCreate, product: createdProduct} = productCreate\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n        \r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                       <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n             \r\n            { loadingDelete && <Loader/> }\r\n            { errorDelete && <Message variant='danger'>{errorDelete} </Message> }\r\n\r\n            { loadingCreate && <Loader/> }\r\n            { errorCreate && <Message variant='danger'>{errorCreate} </Message> }\r\n\r\n\r\n            {loading\r\n            ? <Loader/>\r\n            : error \r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <div>\r\n                    <Table stripped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Price</th>\r\n                                <th>Category</th>\r\n                                <th>Available Quantity</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead> \r\n                        <tbody>\r\n                             {products.map(product => (\r\n                                 <tr key= {product._id}>\r\n                                     <td>{product._id}</td>\r\n                                     <td>{product.name}</td>\r\n                                     <td>${product.price}</td>\r\n                                     <td>{product.category}</td>\r\n                                     <td>{product.countInStock}</td>\r\n                                     \r\n                                     <td>\r\n                                         <LinkContainer to={`/admin/product/${product._id}/edit`} >\r\n                                             <Button variant='dark' className='btn-sm'>\r\n                                             <i className='fas fa-edit' ></i> \r\n                                             </Button>\r\n                                         </LinkContainer>\r\n                                         <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(product._id) }>\r\n                                             <i className='fas fa-trash' ></i> \r\n                                            </Button>\r\n                                     </td>\r\n                                 </tr>\r\n                             ))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true}></Paginate>\r\n                </div>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import './App.css';\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main className= 'py-3' >\n        <Container>\n            <Route path='/' component={HomeScreen} exact />\n            <Route path='/login' component={LoginScreen} />\n            <Route path='/register' component={RegisterScreen} />\n            <Route path='/profile' component={ProfileScreen} />\n            <Route path='/product/:id' component={ProductScreen} />\n            <Route path='/cart/:id?' component={CartScreen} />\n            <Route path='/shipping' component={ShippingScreen} />\n            <Route path='/payment' component={PaymentScreen} />\n            <Route path='/placeorder' component={PlaceOrderScreen} />\n            <Route path='/order/:id' component={OrderScreen} />\n           \n            <Route path='/admin/userList' component={UserListScreen} />\n            <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n           \n\n            <Route path='/admin/productList' component={ProductListScreen} />\n            <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n            <Route path='/admin/orderList' component={OrderListScreen} />\n           \n        </Container>\n    \n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}